{"ast":null,"code":"import toast from \"react-hot-toast\";\nexport const usernameValidate = (values, props /* only available when using withFormik */) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    errors.username = toast.error('Invalid Username..!');\n  }\n  return errors;\n};\nexport const passwordValidate = (values, props) => {\n  let regularExpression = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n  const errors = {};\n  if (!values.password) {\n    errors.password = toast.error('Password Required...!');\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error('Wrong Password!');\n  } else if (!regularExpression.test(values.password)) {\n    errors.password = toast.error('password should contain special characters');\n  } else if (values.password.length < 6) {\n    errors.password = toast.error('Password length should be greater than 6');\n  }\n  return errors;\n};\nexport const passwordResetValidate = (values, props) => {\n  const errors = {};\n  if (values.password !== values.confirmpwd) {\n    errors.password = toast.error('Password does not match. Please check again');\n  }\n  return errors;\n};\n\n//Validating Registration\n\nexport const RegisterValidate = (values, props) => {\n  EmailAddressValidation(values, props);\n  usernameValidate(values, props);\n  passwordValidate(values, props);\n};\n_c = RegisterValidate;\nexport const EmailAddressValidation = (values, props) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = toast.error(\"Email Address is required !\");\n  } else if (values.email.includes(' ')) {\n    errors.email = toast.error(\"Invalid Email Address\");\n  }\n};\n_c2 = EmailAddressValidation;\nexport const ProfileValidation = (values, props) => {\n  fnameValidate(values, props);\n  lnameValidate(values, props);\n};\n_c3 = ProfileValidation;\nexport const fnameValidate = (values, props) => {\n  const errors = {};\n  if (!values.fname) {\n    errors.fname = toast.error('First Name is Required...!');\n  } else if (values.fname.includes(\" \")) {\n    errors.fname = toast.error('Invalid First Name..!');\n  }\n  return errors;\n};\nexport const lnameValidate = (values, props) => {\n  const errors = {};\n  if (!values.lname) {\n    errors.lname = toast.error('Last Name is Required...!');\n  } else if (values.fname.includes(\" \")) {\n    errors.lname = toast.error('Invalid Last Name..!');\n  }\n  return errors;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RegisterValidate\");\n$RefreshReg$(_c2, \"EmailAddressValidation\");\n$RefreshReg$(_c3, \"ProfileValidation\");","map":{"version":3,"names":["toast","usernameValidate","values","props","errors","username","error","includes","passwordValidate","regularExpression","password","test","length","passwordResetValidate","confirmpwd","RegisterValidate","EmailAddressValidation","_c","email","_c2","ProfileValidation","fnameValidate","lnameValidate","_c3","fname","lname","$RefreshReg$"],"sources":["/Users/pratikprajapati/Documents/GitHub/Login-with-Auth/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\n\nexport const usernameValidate = (values, props /* only available when using withFormik */) => {\n    const errors = {};\n    if (!values.username) {\n        errors.username = toast.error('Username Required...!');\n    } else if (values.username.includes(\" \")) {\n        errors.username = toast.error('Invalid Username..!');\n    }\n\n    return errors;\n};\n\nexport const passwordValidate = (values, props) => {\n    let regularExpression = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    const errors = {};\n    if (!values.password) {\n        errors.password = toast.error('Password Required...!');\n    } else if (values.password.includes(\" \")) {\n        errors.password = toast.error('Wrong Password!');\n    } else if (!regularExpression.test(values.password)) {\n        errors.password = toast.error('password should contain special characters');\n    } else if (values.password.length < 6) {\n        errors.password = toast.error('Password length should be greater than 6');\n    }\n\n    return errors;\n};\n\nexport const passwordResetValidate = (values, props) => {\n    const errors = {};\n    if (values.password !== values.confirmpwd) {\n        errors.password = toast.error('Password does not match. Please check again');\n    }\n    return errors;\n};\n\n//Validating Registration\n\nexport const RegisterValidate = (values, props) => {\n    EmailAddressValidation(values, props);\n    usernameValidate(values, props);\n    passwordValidate(values, props);\n}\n\nexport const EmailAddressValidation = (values, props) => {\n    const errors = {};\n    if (!values.email) {\n        errors.email = toast.error(\"Email Address is required !\");\n    }\n    else if (values.email.includes(' ')) {\n        errors.email = toast.error(\"Invalid Email Address\");\n    }\n}\n\nexport const ProfileValidation=(values,props)=>{\n    fnameValidate(values,props);\n    lnameValidate(values,props);   \n}\n\n\nexport const fnameValidate = (values, props) => {\n    const errors = {};\n    if (!values.fname) {\n        errors.fname = toast.error('First Name is Required...!');\n    } else if (values.fname.includes(\" \")) {\n        errors.fname = toast.error('Invalid First Name..!');\n    }\n\n    return errors;\n};\nexport const lnameValidate = (values, props) => {\n    const errors = {};\n    if (!values.lname) {\n        errors.lname = toast.error('Last Name is Required...!');\n    } else if (values.fname.includes(\" \")) {\n        errors.lname = toast.error('Invalid Last Name..!');\n    }\n\n    return errors;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}